<project xmlns:sf="antlib:com.salesforce" basedir="."
	name="Sample Build file for ANT migration tool" default="deploy">

  <property file="build.properties"/>
  <property environment="env" />
  <property name="ant.jar" value="./lib/ant-salesforce.jar"/>

  <property name="sf.username" value="${salesforce.username}" />
  <property name="sf.password" value="${salesforce.password}" />
  <property name="sf.serverurl" value="${salesforce.loginurl}" />
  <property name="sf.testLevel" value="${salesforce.testLevel}" />

  <!-- Build classpath -->
  <path id="antlib">
    <fileset dir="lib"/>
  </path>

  <!-- Define the Taskdef for Ant migration tool -->
  <taskdef resource="com/salesforce/antlib.xml" classpath="./lib/ant-salesforce.jar" uri="antlib:com.salesforce"/>

  <target name="retrieve">
    <mkdir dir="../Src" />
    <sf:retrieve username="${sf.username}" password="${sf.password}" serverurl="${sf.serverurl}" retrieveTarget="../Src" unpackaged="./package.xml"/>
  </target>

  <macrodef name="git">
    <attribute name="command" />
    <!--<attribute name="dir" default="${gt.Directory}" />-->
    <element name="args" optional="true" />
    <sequential>
        <echo message="git @{command}" />
        <exec executable="git" dir="@{dir}">
            <arg value="@{command}" />
            <args/>
        </exec>
    </sequential>
</macrodef>

<target name="GitOperations" description="Commits all changes to version git" depends="retrieve">
 
        <echo message="Commiting all changes with message ${gt.commitMessage}" />
 
        <git command="add">
            <args>
                <arg value="." />
            </args>
        </git>
 
        <git command="commit">
            <args>
                <arg value="-am ${gt.commitMessage}" />
            </args>
        </git>
    </target>

  <target name="validate">

    <echo message="Validating merged metadata from Deployment directory..." />

    <sf:deploy
			singlePackage="true"
			username="${sf.username}"
      password="${sf.password}"
      serverurl="${sf.serverurl}"
      TESTLEVEL="${sf.testLevel}"
			CHECKONLY="true"
			deployRoot="../Src"
		/>

  </target>

</project>
